[tool.poetry]
name = "tool-bot"
version = "0.1.0"
description = ""
authors = ["rimasko <rimas.amga@gmail.com>"]
readme = "README.md"
packages = [{include = "tool_bot"}]

[tool.poetry.dependencies]
python = "^3.9"
aiogram = "^2.25.1"
pytube = "^12.1.2"
instaloader = "^4.9.5"
aioredis = "^2.0.1"
loguru = "^0.6.0"
uvloop = "^0.17.0"
python-dotenv = "^0.21.1"
pydantic = "^1.10.4"
aiojobs = "^1.1.0"
redis = "^4.5.1"


[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
black = "^23.1.0"
ruff = "^0.0.245"
mypy = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 100
target_version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | \.env
  | logs
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["bot", "test"]
force_alphabetical_sort = true
force_single_line = true
lines_after_imports = 2
line_length = 100

[tool.pytest.ini_options]
testpaths = "tests"

[tool.mypy]
python_version = "3.9"
files = "bot/*.py"
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true


[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
select = ["E", "F", "B"]

# Never enforce `E501` (line length violations).
ignore = ["E501"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "venv",
]
# Ignore `E402` (import violations) in all `__init__.py` files
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
